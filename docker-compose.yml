version: "3"
services: 
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=jje
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=business_intelligence
    container_name: postgres_BI
    volumes:
      - ./init:/docker-entrypoint-initdb.d/:ro
    networks:
      - BI_network

  # postgres:
  #   image: postgres
  #   container_name: airflow_db
  #   environment:
  #     - POSTGRES_USER=airflow
  #     - POSTGRES_PASSWORD=airflow
  #     - POSTGRES_DB=airflow
  #   networks:
  #     - BI_network

  # scheduler:
  #   image: apache/airflow
  #   container_name: airflow_scheduler_BI
  #   entrypoint: ./scripts/sc_entrypoint.sh
  #   restart: always
  #   depends_on:
  #       - db
  #   env_file:
  #       - .env
  #   volumes:
  #       - ./dags:/opt/airflow/dags
  #       - ./scripts:/opt/airflow/scripts
  #       - ./data:/opt/airflow/data
  #       - ./logs:/opt/airflow/logs
  #   networks: 
  #       - "BI_network"

  # airflow:
  #   image: apache/airflow
  #   container_name: airflow_webserver_BI
  #   entrypoint: ./scripts/ws_entrypoint.sh
  #   restart: always
  #   depends_on:
  #       - db
  #       - scheduler
  #   env_file:
  #       - .env
  #   volumes:
  #       - ./dags:/opt/airflow/dags
  #       - ./scripts:/opt/airflow/scripts
  #       - ./data:/opt/airflow/data
  #       - ./logs:/opt/airflow/logs
  #   ports:
  #       - "8080:8080"
  #   networks: 
  #     - "BI_network"


  # worker:
  #   image: apache/airflow
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./airflow_files/dags:/opt/airflow/dags
  #     - ./logs:/opt/airflow/logs
  #     - ./data:/opt/airflow/data
  #   command: celery worker
  #   depends_on:
  #     - scheduler
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 8s
  #       max_attempts: 3
  #   networks:
  #     - BI_network




  # airflow:
  #   image: apache/airflow
  #   container_name: airflow
  #   entrypoint: ./scripts/entrypoint.sh
  #   restart: always
  #   depends_on:
  #       - db
  #   env_file:
  #       - .env
  #   volumes:
  #       - ./dags:/opt/airflow/dags
  #       - ./scripts:/opt/airflow/scripts
  #       - ./data:/opt/airflow/data
  #   ports:
  #       - "8080:8080"
  #   networks: 
  #     - "BI_network"


  

  
  adminer:
    image: adminer
    container_name: "adminer_BI"
    restart: always
    ports:
      - 8282:8080
    networks: 
      - BI_network

networks:
  BI_network:
    driver: "bridge"
